# Production-ready Docker Compose configuration (DEFAULT)
# Use: docker compose up (production)
# Use: docker compose -f docker-compose.dev.yml up (development)
version: '3.8'

services:
  app:
    build:
      context: .
      target: runner
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
      - "3005"
    environment:
      - NODE_ENV=production
      - PORT=3005
      - DATABASE_URL=postgresql://postgres:password@db:5432/finetuned_photo_gen
      - NEXTAUTH_URL=https://photogen.innovativehype.xyz
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      # Add other production environment variables as needed
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Mount only necessary files for production
      - ./prisma:/app/prisma:ro
    networks:
      - app-network
    restart: unless-stopped
    # Resource limits for production stability
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Security enhancements
    security_opt:
      - no-new-privileges:true
    read_only: false  # Next.js needs write access for cache
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3005/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15.8-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-finetuned_photo_gen}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-finetuned_photo_gen}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network
    restart: unless-stopped
    # Resource limits for database
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    # Security enhancements
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16 